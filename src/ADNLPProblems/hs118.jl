export hs118

function hs118(; n::Int = default_nvar, type::Val{T} = Val(Float64), kwargs...) where {T}
  x0 = T[20, 55, 15, 20, 60, 20, 20, 60, 20, 20, 60, 20, 20, 60, 20]
  lvar = T[8, 43, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  uvar = T[21, 57, 16, 90, 120, 60, 90, 120, 60, 90, 120, 60, 90, 120, 60]

  a = T(50.176)
  b = T(sin(0.25))
  c = T(cos(0.25))
  function f(x)
    n = length(x)
    return sum(
      23 // 10 * x[3 * k + 1] +
      1 // 10000 * x[3 * k + 1]^2 +
      17 // 10 * x[3 * k + 2] +
      1 // 10000 * x[3 * k + 2]^2 +
      22 // 10 * x[3 * k + 3] +
      15 // 100000 * x[3 * k + 3]^2 for k = 0:4
    )
  end
  lcon = T[60, 70, 100, 50, 85, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7]
  ucon = vcat(T(Inf) * ones(T, 5), T[6, 6, 7, 6, 6, 7, 6, 6, 7, 6, 6, 7])
  clinvals = vcat(
    T[1; 1; 1],
    T[1; 1; 1],
    T[1; 1; 1],
    T[1; 1; 1],
    T[1; 1; 1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
    T[1; -1],
  )
  clinrows = vcat(
    [1; 1; 1],
    [2; 2; 2],
    [3; 3; 3],
    [4; 4; 4],
    [5; 5; 5],
    [6; 6],
    [7; 7],
    [8; 8],
    [9; 9],
    [10; 10],
    [11; 11],
    [12; 12],
    [13; 13],
    [14; 14],
    [15; 15],
    [16; 16],
    [17; 17],
  )
  clincols = vcat(
    [1; 2; 3],
    [4; 5; 6],
    [7; 8; 9],
    [10; 11; 12],
    [13; 14; 15],
    [4; 1],
    [5; 2],
    [6; 3],
    [7; 4],
    [8; 5],
    [9; 6],
    [10; 7],
    [11; 8],
    [12; 9],
    [13; 10],
    [14; 11],
    [15; 12],
  )
  return ADNLPModels.ADNLPModel(
    f,
    x0,
    lvar,
    uvar,
    clinrows,
    clincols,
    clinvals,
    lcon,
    ucon,
    name = "hs118";
    kwargs...,
  )
end
